<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/7gAOQWRvYmUAZAAAAAAB/+EDuEV4aWYAAE1NACoAAAAIAAcBEgAD
        AAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAHwAAAHIBMgAC
        AAAAFAAAAJKHaQAEAAAAAQAAAKYAAADSASwAAAABAAABLAAAAAEAAEFkb2JlIFBob3Rvc2hvcCAyMS4y
        IChXaW5kb3dzKQAAMjAyMzowNToxNSAxMTo1MTo0NgAAA6ABAAMAAAAB//8AAKACAAQAAAABAAAAm6AD
        AAQAAAABAAAAMAAAAAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAEgARsABQAAAAEAAAEoASgAAwAA
        AAEAAgAAAgEABAAAAAEAAAEwAgIABAAAAAEAAAJ/AAAAAAAAAEgAAAABAAAASAAAAAH/2P/tAAxBZG9i
        ZV9DTQAC/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwM
        DAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsNDg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwR
        EQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgACwAlAwEiAAIRAQMRAf/dAAQA
        A//EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYHCAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcI
        CQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT
        8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXiZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm
        9jdHV2d3h5ent8fX5/cRAAICAQIEBAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAz
        JGLhcoKSQ1MVY3M08SUGFqKygwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1
        VmZ2hpamtsbW5vYnN0dXZ3eHl6e3x//aAAwDAQACEQMRAD8A7dUsrOtpfa1jGk1hha0te5zt23dYPT9n
        pt3en+/vV1Sb9H87ntwrgcs7aGnN/aOQXACtpmwtIAe6GAsZu3N/e9Xf6jvSr/Rq3jPtsobZaGh7pkNB
        A0Jbw8ud+arB/tfNQPP96ROmyADeptSSSSC5/9kA/9sAQwACAgICAgICAgICAwICAgMEAwICAwQFBAQE
        BAQFBgUFBQUFBQYGBwcIBwcGCQkKCgkJDAwMDAwMDAwMDAwMDAwM/9sAQwEDAwMFBAUJBgYJDQoJCg0P
        Dg4ODg8PDAwMDAwPDwwMDAwMDA8MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAMACbAwER
        AAIRAQMRAf/EAB8AAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKC//EALUQAAIBAwMCBAIGBwMEAgYC
        cwECAxEEAAUhEjFBUQYTYSJxgRQykaEHFbFCI8FS0eEzFmLwJHKC8SVDNFOSorJjc8I1RCeTo7M2F1Rk
        dMPS4ggmgwkKGBmElEVGpLRW01UoGvLj88TU5PRldYWVpbXF1eX1ZnaGlqa2xtbm9jdHV2d3h5ent8fX
        5/c4SFhoeIiYqLjI2Oj4KTlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/EAB8BAAICAwEBAQEBAAAA
        AAAAAAEAAgMEBQYHCAkKC//EALURAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHw
        FMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSk
        tMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmp
        ucnZ6fkqOkpaanqKmqq6ytrq+v/dAAQAFP/aAAwDAQACEQMRAD8A+pOdi+WuxV2KuxV2KuxV2KuxV2Ku
        xV2KuxV2KuxV2KuxV2KuxV2KuxV//9D6k52L5a7FXYq7FXYqhb2+s9NtZr2/uY7S0t15TXErBVUdNyff
        JRiZGgxnOMBcjQDFdG/MLyhr97+jtM1dZLxiRDDJHJCZKfyGRVDH26+2Wz02SAsjZxcOvw5ZcMZbqute
        fPKfl2+/R2sasLO99NZPR9CeT4XrQ8o42Xt44MenyTFxGyc2tw4ZcM5Ufcf1J1pOuaRrtubrR9Rg1CFC
        FkaFqlCdwGXqp9iMhPHKBqQpuxZoZRcCCGJTfmr5Bgmlgk19fUhdo5ONtcuvJTQ0ZYiCPcGmXDSZTvX3
        OLLtPTg0ZfYf1Mr0fX9I17T/ANKaTepdWAZ1a4o0fEp9oMsgVlp13HTfKZ45QNEbuTizwyx4oGwxFPzV
        8jyaiNNXV/jaT0luzG4ty3T+8IpSu3Lp3rTfLjpMtXTijtPTmXDxfq+aea9528r+WbiC11vVVsri4j9a
        KERSykx1Khj6SPQEggV65DHgnkFxFt2fWYsBAnKiff8AoSm2/NLyJeXNvaW+uh7i6kSGBDbXKgu5CqCz
        RACpPUmmTOkygWR9zVHtLTyIAlufI/qZ/mM57sVdirsVdirsVf/R+pOdi+WuxV2KuxV2Kvm/89NTupb3
        QfLsMhEMkZu5YAaB5HcxRFvlxanzzadnwABk8921kJlHGPf+gJ9efkpYLJoE2iai2l3GnFG1O6blK87o
        VYSpVqIwIOwFOnhvVHXHfiF23z7HjcTA0Rz8/wBTEfzBsbTU/wA2NJ0+/r9SvEs4rqjcPgYsD8XbL9NI
        xwEjnu4uvhGesjGXI0gfJSR6D+bH6I8v373ukPLPbSSBg4liWFn+IrQHg46jw98ln9eDikKLDRgYtZwY
        zcdx9n6CwjyzZ+TrzUNSXzhq11pVsgrZvaqWLuXNQ1IZtgPYZfllkAHALcLTwwSlLxpEDpX9hey+dLfT
        fI35arpPl66nmtvMV0tLmZlMjxTJ6jmqqgoURVpTocwcBObNxS6O31kY6XS8GMmpH73kepeR7jTvJGj+
        bnnLNqVwUks6CkcThvSflXvw3+Y98zY6gSyGHc6rJojDTxy3zPLy6PSoPLOmeePINr5p1O5vE1fy/pFx
        ZoYpE9OQWPqvEZA6MTsRWhFcxTllhymAqifvdjHTQ1WnGWRPFGJH+lukj/KbyRpHmZbnVb+e7iudGvYG
        t44HjWNqfvAHDRsTuOxG2WazPLH6RW4aey9FDNc5E3Ej8cn1dmnendirsVdirsVdir//0vqTnYvlrsVd
        irsVdir5t/PXSLpb3RfMUEbmBIfqc9wtf3bo5kir4V5tQ+2bTs+YoxLz3beI8Ucg936kPq35y6xq9to2
        n+VrOWz1qZ4xfSFI5fUl6elCpDVVmNakA4YaGMSTM7Mcva88gjHEKkef6gkP5n6fqOq+fLHTVWOTVbyx
        s4iinijTspqASdgW6VOWaSQjiJ6Alp7SxyyagR6kD5o38pda0DQta/ReqaPcQeYr2b6lDqJq3Bmbj6TR
        EAx77EivvQZHWQlONg+kbsuy82PFPglEiZ2v9FdGFaBdeTrHVtY/xhpF1qdsXZbKG1YoY3Eh5FqTQ9tu
        py/IMhiOA04eGWCE5eNEkdK/tDNfzJ8yaT5k8qeWJ9Dt57TTrO7uLNLW4UKy+hDFxA4s4ICuKGuUaXFL
        HkkJc6cztHUQzYYGAIAJG/kAkWsQfmU3kqzOrrTyfBBayWdfqYpGeKwH93++6MPtfTlkDh8T0/Vv3/Hy
        aMo1XgDj/u6Hd8PN6d+XoZfyj8xFj8Ji1MrXw9Cn6wcxNT/fj4Oz0H+Jy/zvuUvyDauneY0p9m5gNfmj
        /wBMPaPOLHsM+iXvD3/Nc712KuxV2KuxV2Kv/9P6k52L5a7FXYq7FXYqo3Fvb3cMltdQR3NvMOM0Eqh0
        YeDKwII+eEEjcMZREhR3CSab5T8taRc/XNM0Ozs7qhAuI4gHUHrxPavtlks05CiSWrHpcWM3GIBRNz5f
        0W81O21m502CfVLQKLa9ZaugUkrQ+xJpkRkkBwg7MpYISkJkCx1XPoWiyanHrL6XatqsIpHqBiX1RtT7
        VK1ptXHxJVw3spwwMuOhxd/VCyeU/Ks0kk03lnSpZZWLyyvZQMzMxqSSUqSTkhmmP4j82B0uEmzCPyCq
        3lny49tHZP5f01rOF2khtDaQmJXYUZlTjQE03IGDxZ3dm/ey/L4q4eEV3UExuLGyu7VrG6s4LmydVV7O
        WNXiKqQVBRgVoCBTbIiRBsHdslCMhwkWO5bb6dp9paGwtLC3tbAhlNlDEiQ0evIemoC/FU123xMiTZO6
        I44xHCAAO5ZYaXpmlRvFpenWumxStzkjtYUhVmpSpCAAmmMpylzNohihjFRAHuFI/ItjsVdirsVdirsV
        f//U+pOdi+WuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//9k=
</value>
  </data>
</root>